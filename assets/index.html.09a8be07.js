import{c as n}from"./app.45019170.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},t=n(`<h1 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction" aria-hidden="true">#</a> Introduction</h1><p>Reaccord is a powerful framework to build Discord bot messages declaratively, using React. It is meant to be used in conjonction with discord.js, so that the whole Discord API is available.</p><h2 id="installation" tabindex="-1"><a class="header-anchor" href="#installation" aria-hidden="true">#</a> Installation</h2><p><strong>Node.js 16.6.0 or newer is required.</strong></p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> @reaccord/react
<span class="token function">yarn</span> <span class="token function">add</span> @reaccord/react
<span class="token function">pnpm</span> <span class="token function">add</span> @reaccord/react
</code></pre></div><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h2><p>Install required dependencies.</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> @reaccord/react react discord.js
<span class="token function">yarn</span> <span class="token function">add</span> @reaccord/react react discord.js
<span class="token function">pnpm</span> <span class="token function">add</span> @reaccord/react react discord.js
</code></pre></div><p>Let&#39;s create a simple Ping &lt;-&gt; Pong app</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Client <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;discord.js&quot;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> reaccord <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@reaccord/react&quot;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span>

<span class="token comment">// Create discord.js client</span>
<span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Client</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    intents<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;Guilds&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GuildMessages&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// Initialize Reaccord</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> renderMessage <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">reaccord</span><span class="token punctuation">(</span>client<span class="token punctuation">)</span>

<span class="token comment">// Create a simple message that&#39;ll contain &#39;Pong!&#39;</span>
<span class="token keyword">const</span> <span class="token function-variable function">Pong</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>message</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>content</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Pong!</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>content</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>message</span><span class="token punctuation">&gt;</span></span>
    <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// Register event</span>
client<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;messageCreate&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>message<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> content<span class="token punctuation">,</span> channel <span class="token punctuation">}</span> <span class="token operator">=</span> message
    <span class="token keyword">if</span> <span class="token punctuation">(</span>content <span class="token operator">!==</span> <span class="token string">&quot;!ping&quot;</span><span class="token punctuation">)</span> <span class="token keyword">return</span>

    <span class="token comment">// Send &#39;Pong!&#39; to the channel</span>
    <span class="token keyword">await</span> <span class="token function">renderMessage</span><span class="token punctuation">(</span>channel<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Pong</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// Connect your bot</span>
client<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div>`,10);function p(e,o){return t}var r=s(a,[["render",p]]);export{r as default};
