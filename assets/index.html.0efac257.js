import{_ as n,o as s,c as a,d as t}from"./app.859cf679.js";const e={},p=t(`<h1 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction" aria-hidden="true">#</a> Introduction</h1><p>Reaccord is a powerful framework to build Discord bots declaratively built on top of React and Discord.js.</p><h2 id="installation" tabindex="-1"><a class="header-anchor" href="#installation" aria-hidden="true">#</a> Installation</h2><p><strong>Node.js 16.6.0 or newer is required.</strong></p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> reaccord
<span class="token function">yarn</span> <span class="token function">add</span> reaccord
<span class="token function">pnpm</span> <span class="token function">add</span> reaccord
</code></pre></div><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h2><p>Let&#39;s create a <code>/ping</code> slash command that will respond <code>Pong</code>.</p><h3 id="step-by-step" tabindex="-1"><a class="header-anchor" href="#step-by-step" aria-hidden="true">#</a> Step by step</h3><p><strong>1. Import <code>reaccord</code></strong></p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Client <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;reaccord&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>2. Instantiate the client</strong></p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token function">createClient</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  token<span class="token operator">:</span> <span class="token string">&quot;token&quot;</span><span class="token punctuation">,</span>
  intents<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;Guilds&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GuildMessages&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GuildMessageReactions&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  devGuildId<span class="token operator">:</span> <span class="token string">&quot;dev-guild-id&quot;</span><span class="token punctuation">,</span>
  clientId<span class="token operator">:</span> <span class="token string">&quot;client-id&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3. Register our slash command</strong><br><em>render will respond to the interaction with a message built with react</em></p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code>client
  <span class="token punctuation">.</span><span class="token function">createSlashCommand</span><span class="token punctuation">(</span><span class="token string">&quot;ping&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Ping bot&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>content</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Pong</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>content</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><em><strong>3.bis Respond to interaction directly</strong></em><br><em>exec will allow you to respond to the interaction without needing to return a react component</em></p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code>client<span class="token punctuation">.</span><span class="token function">createSlashCommand</span><span class="token punctuation">(</span><span class="token string">&quot;ping&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Ping bot&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_<span class="token punctuation">,</span> interaction<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  interaction<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token string">&quot;Pong&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><p><strong>4. Connect the client</strong></p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code>client<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">(</span>client<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u{1F680} Client connected as </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>client<span class="token punctuation">.</span>user<span class="token operator">?.</span>username<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">!</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="complete-code" tabindex="-1"><a class="header-anchor" href="#complete-code" aria-hidden="true">#</a> Complete code</h3><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Client <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;reaccord&quot;</span>

<span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Client</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  token<span class="token operator">:</span> <span class="token string">&quot;token&quot;</span><span class="token punctuation">,</span>
  intents<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;Guilds&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GuildMessages&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GuildMessageReactions&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  devGuildId<span class="token operator">:</span> <span class="token string">&quot;dev-guild-id&quot;</span><span class="token punctuation">,</span>
  clientId<span class="token operator">:</span> <span class="token string">&quot;client-id&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

client
  <span class="token punctuation">.</span><span class="token function">createSlashCommand</span><span class="token punctuation">(</span><span class="token string">&quot;ping&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Ping bot&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>content</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Pong</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>content</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>

client<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">(</span>client<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u{1F680} Client connected as </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>client<span class="token punctuation">.</span>user<span class="token operator">?.</span>username<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">!</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19),o=[p];function c(i,l){return s(),a("div",null,o)}var r=n(e,[["render",c],["__file","index.html.vue"]]);export{r as default};
